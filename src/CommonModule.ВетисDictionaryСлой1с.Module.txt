
Функция AnimalDisease(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(пЗначение) = Тип("СправочникСсылка.ВетисAnimalDisease") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_ЭтоОбъект = ТипЗнч(пЗначение) = Тип("ОбъектXDTO") ИЛИ ТипЗнч(пЗначение) = Тип("Структура");
		_guid = ?(_ЭтоОбъект, пЗначение.guid, пЗначение);
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, "Справочник.ВетисAnimalDisease", Неопределено);
		Если _Значение = Неопределено Тогда
			//создаем автоматически
			Если _ЭтоОбъект И НЕ ПустаяСтрока(пЗначение.name) Тогда
				//по справочнику не ищем, считаем что если нет соответствия, то нет и в справочнике
				//но по хорошему надо искать
				//_Элемент = Справочники.ВетисAnimalDisease.НайтиПоНаименованию(пЗначение.name);
				_Элемент = Справочники.ВетисAnimalDisease.СоздатьЭлемент();
				_Элемент.Наименование = пЗначение.name;
				Попытка
					_Элемент.Записать();
					Ветис.Соответствие_Добавить(_Элемент.Ссылка, пЗначение.guid, пЗначение.name);
					Ветис.Журнал_Добавить("+ " + СокрЛП(пЗначение.name), "Ветис.AnimalDisease");
					Возврат _Элемент.Ссылка;
				Исключение
					Ветис.Журнал_ДобавитьИнформациюОбОшибке(ИнформацияОбОшибке(), "Ветис.AnimalDisease");
					Возврат ПоУмолчанию;
				КонецПопытки;
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция BusinessEntity(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.BusinessEntity("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_guid = ?(ТипЗнч(пЗначение) = Тип("ОбъектXDTO"), пЗначение.guid, пЗначение);
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, ВетисИмяСправочника.BusinessEntity("Справочник"), Неопределено);
		Если _Значение = Неопределено Тогда
			Если Ветис.Настройки_СоздаватьХС() Тогда
				Возврат BusinessEntityДобавить(_guid);
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция District(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.District("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.District("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.District("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция DocumentNature(пЗначение) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип("ПеречислениеСсылка.ВетисDocumentNature") Тогда
		Если      пЗначение = ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.ELECTRONIC") Тогда
			Возврат ВетисКонстанты.DocumentNature_ELECTRONIC();
		ИначеЕсли пЗначение = ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.PAPER") Тогда
			Возврат ВетисКонстанты.DocumentNature_PAPER();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      пЗначение = ВетисКонстанты.DocumentNature_ELECTRONIC() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.ELECTRONIC");
		ИначеЕсли пЗначение = ВетисКонстанты.DocumentNature_PAPER() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.PAPER");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция Country(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Country("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Country("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Country("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Enterprise(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_guid = ?(ТипЗнч(пЗначение) = Тип("ОбъектXDTO"), пЗначение.guid, пЗначение);
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, ВетисИмяСправочника.Enterprise("Справочник"), Неопределено);
		Если _Значение = Неопределено Тогда
			Если Ветис.Настройки_СоздаватьПредприятия() Тогда
				Возврат EnterpriseДобавить(_guid);
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseActivity(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип("СправочникСсылка.ВетисEnterpriseActivity") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, "Справочник.ВетисEnterpriseActivity", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, "Справочник.ВетисEnterpriseActivity", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Locality(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.Locality("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.Locality("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.Locality("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Package(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.PackingForm("СправочникСсылка")) Тогда
		//вызывать надо PackingType
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда //packingType
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.PackingType.guid, ВетисИмяСправочника.PackingForm("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.PackingForm("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция PackageList(пЗначение, пУровень = Неопределено, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.PackingForm("СправочникСсылка")) Тогда
		//вызывать надо PackingType
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если НЕ пЗначение.Свойства().Получить("package") = Неопределено
		И ТипЗнч(пЗначение.package) = Тип("СписокXDTO")
		И пЗначение.package.Количество() > 0 Тогда
			Если пУровень = Неопределено Тогда
				//надо взять максимальный уровень, потому что по нему рассчитывается количество упаковок http://help.vetrf.ru/wiki/Package_v2.0
				//по умолчанию берем последний, из расчета что они расположены по возрастанию уровня
				//сделать: проверить порядок уровней упаковок
				Возврат пЗначение.package[пЗначение.package.Количество()-1];
			Иначе
				Для каждого _package Из пЗначение.package Цикл
					Если _package.level = пУровень Тогда
						Возврат _package;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Иначе
			Возврат ВетисDictionary_2_0.Package();
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция PackingType(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	//сделать: посмотреть как приходит упаковка из api по guid или по globalID, пока считаем что guid
	//2017-11-20 getVetDocumentList возвращает uuid, globalID и name
	//2017-11-20 getStockEntryList, getStockEntryChangesList возвращает guid, uuid и name
	Если ТипЗнч(пЗначение) = Тип("СправочникСсылка.ВетисPackingForm") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если НЕ ПустаяСтрока(пЗначение.globalID) Тогда
			_Значение = Справочники.ВетисPackingForm.НайтиПоРеквизиту("globalID", пЗначение.globalID);
			Возврат ?(_Значение = Неопределено, ПоУмолчанию, _Значение);
		ИначеЕсли НЕ ПустаяСтрока(пЗначение.guid) Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, "Справочник.ВетисPackingForm", ПоУмолчанию);
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	ИначеЕсли СтрДлина(пЗначение) = 2 Тогда //считаем что это globalID
		Возврат Справочники.ВетисPackingForm.НайтиПоРеквизиту("globalID", пЗначение);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, "Справочник.ВетисPackingForm", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Producer(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("СписокXDTO") Тогда
		Для каждого _Значение Из пЗначение Цикл
			Возврат Producer(_Значение);
		КонецЦикла;
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если НЕ пЗначение.Свойства().Получить("guid") = Неопределено Тогда
			Возврат Enterprise(пЗначение.guid, ПоУмолчанию);
		ИначеЕсли НЕ пЗначение.Свойства().Получить("enterprise") = Неопределено Тогда
			Возврат Enterprise(пЗначение.enterprise, ПоУмолчанию);
		ИначеЕсли НЕ пЗначение.Свойства().Получить("producer") = Неопределено И ТипЗнч(пЗначение.producer) = Тип("СписокXDTO") И пЗначение.producer.Количество() > 0 Тогда
			Возврат Enterprise(пЗначение.producer[0].enterprise.guid, ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Enterprise(пЗначение, ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Product(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Product("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция ProductMarks(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип("Структура") Тогда
		Возврат ВетисDictionary_2_0.ProductMarks(пЗначение.Значение, ProductMarkingClass(пЗначение.Класс));
	ИначеЕсли ТипЗнч(пЗначение) = Тип("СписокXDTO") Тогда
		Если пЗначение.Количество() = 0 Тогда
			Возврат Новый Структура("content,class");
		Иначе
			Для каждого _Строка Из пЗначение Цикл
				Возврат Новый Структура("content,class",_Строка.__content, ProductMarkingClass(_Строка.class));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция Purpose(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Purpose("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Purpose("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Purpose("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция ProductItem(пЗначение, пПредприятие, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если ЗначениеЗаполнено(пЗначение.guid) Тогда
			Возврат Ветис.Соответствие_ПолучитьProductItem(пЗначение.guid, пПредприятие, ПоУмолчанию);
		Иначе
			Возврат Ветис.Соответствие_ПолучитьProductItem(пЗначение.name, пПредприятие, ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Ветис.Соответствие_ПолучитьProductItem(пЗначение, пПредприятие, ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция ProductItemProducing(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("СписокXDTO") Тогда
		Для каждого _Значение Из пЗначение Цикл
			Возврат ProductItemProducing(_Значение);
		КонецЦикла;
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если НЕ пЗначение.Свойства().Получить("guid") = Неопределено Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		ИначеЕсли НЕ пЗначение.Свойства().Получить("location") = Неопределено Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.location.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Region(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.Region("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.Region("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.Region("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция RegionalizationCondition(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип("СправочникСсылка.ВетисRegionalizationCondition") Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, "Справочник.ВетисRegionalizationCondition", ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, "Справочник.ВетисRegionalizationCondition", ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция SubProduct(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.SubProduct("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_guid = ?(ТипЗнч(пЗначение) = Тип("ОбъектXDTO"), пЗначение.guid, пЗначение);
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, ВетисИмяСправочника.SubProduct("Справочник"), Неопределено);
		Если _Значение = Неопределено Тогда
			Если Ветис.Настройки_Интеграция() Тогда
				Возврат ПоУмолчанию;
			Иначе
				Возврат SubProductДобавить(_guid);
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция Unit(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Unit("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Unit("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Unit("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции


Функция BusinessEntityType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисBusinessEntityType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_JURIDICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_PHYSICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_PHYSICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция DocumentType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисDocumentType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Коносамент") Тогда
			Возврат ВетисКонстанты.DocumentType_Коносамент();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.CMR") Тогда
			Возврат ВетисКонстанты.DocumentType_CMR();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Авианакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_Авианакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТранспортнаяНакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_ТранспортнаяНакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТОРГ12") Тогда
			Возврат ВетисКонстанты.DocumentType_ТОРГ12();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС") Тогда
			Возврат ВетисКонстанты.DocumentType_ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции") Тогда
			Возврат ВетисКонстанты.DocumentType_РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.АктОтбораПробыНаИсследование") Тогда
			Возврат ВетисКонстанты.DocumentType_АктОтбораПробыНаИсследование();
		Иначе
			Возврат ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_Коносамент() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Коносамент");
		ИначеЕсли value = ВетисКонстанты.DocumentType_CMR() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.CMR");
		ИначеЕсли value = ВетисКонстанты.DocumentType_Авианакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Авианакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ТранспортнаяНакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТранспортнаяНакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ТОРГ12() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТОРГ12");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС");
		ИначеЕсли value = ВетисКонстанты.DocumentType_РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции");
		ИначеЕсли value = ВетисКонстанты.DocumentType_АктОтбораПробыНаИсследование() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.АктОтбораПробыНаИсследование");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ProductType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисProductType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты") Тогда
			Возврат ВетисКонстанты.ProductType_МясоИМясопродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.КормаИКормовыеДобавки") Тогда
			Возврат ВетисКонстанты.ProductType_КормаИКормовыеДобавки();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ЖивыеЖивотные") Тогда
			Возврат ВетисКонстанты.ProductType_ЖивыеЖивотные();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ЛекарственныеСредства") Тогда
			Возврат ВетисКонстанты.ProductType_ЛекарственныеСредства();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ПищевыеПродукты") Тогда
			Возврат ВетисКонстанты.ProductType_ПищевыеПродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.НепищевыеПродуктыИДругое") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.РыбаИМорепродукты") Тогда
			Возврат ВетисКонстанты.ProductType_РыбаИМорепродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ПродукцияНеТребующаяРазрешения") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ProductType_МясоИМясопродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_КормаИКормовыеДобавки() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.КормаИКормовыеДобавки");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЖивыеЖивотные() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ЖивыеЖивотные");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЛекарственныеСредства() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ЛекарственныеСредства");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПищевыеПродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ПищевыеПродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.НепищевыеПродуктыИДругое");
		ИначеЕсли value = ВетисКонстанты.ProductType_РыбаИМорепродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.РыбаИМорепродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПродукцияНеТребующаяРазрешения() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ПродукцияНеТребующаяРазрешения");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция TransportType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисTransportType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный") Тогда
			Возврат ВетисКонстанты.TransportType_Автомобильный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Железнодорожный") Тогда
			Возврат ВетисКонстанты.TransportType_Железнодорожный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Авиатранспорт") Тогда
			Возврат ВетисКонстанты.TransportType_Авиатранспортный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойКонтейнер") Тогда
			Возврат ВетисКонстанты.TransportType_МорскойКонтейнер();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойТрюм") Тогда
			Возврат ВетисКонстанты.TransportType_МорскойТрюм();
		Иначе
			Возврат ВетисКонстанты.TransportType_Автомобильный();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.TransportType_Автомобильный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный");
		ИначеЕсли value = ВетисКонстанты.TransportType_Железнодорожный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Железнодорожный");
		ИначеЕсли value = ВетисКонстанты.TransportType_Авиатранспортный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Авиатранспорт");
		ИначеЕсли value = ВетисКонстанты.TransportType_МорскойКонтейнер() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойКонтейнер");
		ИначеЕсли value = ВетисКонстанты.TransportType_МорскойТрюм() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойТрюм");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция TransportationStorageType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисTransportStorageType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлажденные") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_CHILLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлаждаемые") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_COOLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Вентилируемые") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_VENTILATED();
		Иначе
			Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.TransportationStorageType_FROZEN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_CHILLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлажденные");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_COOLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлаждаемые");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_VENTILATED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Вентилируемые");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ResearchResult(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисResearchResult") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN") Тогда
			Возврат ВетисКонстанты.ResearchResult_UNKNOWN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.POSITIVE") Тогда
			Возврат ВетисКонстанты.ResearchResult_POSITIVE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.NEGATIVE") Тогда
			Возврат ВетисКонстанты.ResearchResult_NEGATIVE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNFULFILLED") Тогда
			Возврат ВетисКонстанты.ResearchResult_UNFULFILLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSERAW") Тогда
			Возврат ВетисКонстанты.ResearchResult_VSERAW();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSEFULL") Тогда
			Возврат ВетисКонстанты.ResearchResult_VSEFULL();
		Иначе
			Возврат ВетисКонстанты.ResearchResult_UNKNOWN();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ResearchResult_UNKNOWN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_POSITIVE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.POSITIVE");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_NEGATIVE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.NEGATIVE");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_UNFULFILLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNFULFILLED");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_VSERAW() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSERAW");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_VSEFULL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSEFULL");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция PackageLevelType(value = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисPackageLevelType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Внутренний") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Внутренний();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Потребительский();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Промежуточный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Промежуточный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Торговый") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Торговый();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Дополнительный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Дополнительный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Транспортный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Транспортный();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.PackageLevelType_Внутренний() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Внутренний");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Потребительский() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Промежуточный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Промежуточный");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Торговый() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Торговый");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Дополнительный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Дополнительный");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Транспортный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Транспортный");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ProductMarkingClass(value = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисProductMarkingClass") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.UNDEFINED") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_UNDEFINED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BN") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_BN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.SSCC") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_SSCC();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN8") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_EAN8();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN13") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_EAN13();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN128") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_EAN128();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BNDLID") Тогда
			Возврат ВетисКонстанты.ProductMarkingClass_BNDLID();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ProductMarkingClass_UNDEFINED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.UNDEFINED");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_BN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BN");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_SSCC() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.SSCC");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_EAN8() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN8");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_EAN13() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN13");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_EAN128() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.EAN128");
		ИначеЕсли value = ВетисКонстанты.ProductMarkingClass_BNDLID() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductMarkingClass.BNDLID");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисEnterpriseType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Предприятие();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Рынок();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ") Тогда
			Возврат ВетисКонстанты.EnterpriseType_СББЖ();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Судно();
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.EnterpriseType_Предприятие() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Рынок() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_СББЖ() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Судно() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ReferenceType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисReferenceType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ComplementaryDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_ComplementaryDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.PrecedingDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_PrecedingDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.SubsequentFollowingDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_SubsequentFollowingDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ReplacedDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_ReplacedDocument();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисReferenceType.RelatedDocument") Тогда
			Возврат ВетисКонстанты.ReferenceType_RelatedDocument();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ReferenceType_ComplementaryDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ComplementaryDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_PrecedingDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.PrecedingDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_SubsequentFollowingDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.SubsequentFollowingDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_ReplacedDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.ReplacedDocument");
		ИначеЕсли value = ВетисКонстанты.ReferenceType_RelatedDocument() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисReferenceType.RelatedDocument");
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции


Функция BusinessEntityДобавить(guid)
	
	_BusinessEntity = ?(Ветис.Версия_2_0(), ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetBusinessEntityByGuid(guid);
	
	Запрос = Новый Запрос("ВЫБРАТЬ _Таблица.Ссылка ИЗ Справочник."+ВетисИмяСправочника.BusinessEntity()+" КАК _Таблица ГДЕ НЕ _Таблица.ЭтоГруппа И _Таблица.ИНН В (&ИНН)");
	
	Запрос.УстановитьПараметр("ИНН", _BusinessEntity.inn);
	
	_Объект = Запрос.Выполнить().Выбрать();
	
	Если НЕ _Объект.Следующий() Тогда
		
		_Объект = Справочники.Контрагенты.СоздатьЭлемент();
		
		BusinessEntityКонвертировать(_Объект, _BusinessEntity);
		
		_Объект.Записать();
		
		Ветис.Журнал_Добавить("+ " + СокрЛП(_BusinessEntity.name), "Ветис.BusinessEntity");
		
	КонецЕсли;
	
	Ветис.Соответствие_Добавить(_Объект.Ссылка, _BusinessEntity.guid, _BusinessEntity.name, _BusinessEntity.inn);
	
	Возврат _Объект.Ссылка;
	
КонецФункции

Процедура BusinessEntityКонвертировать(пЗначение1, пЗначение2) Экспорт
	
	Если ТипЗнч(пЗначение1) = Тип("ОбъектXDTO") Тогда
		//сделать: дополнить конверсию ХС
		
	ИначеЕсли ТипЗнч(пЗначение2) = Тип("ОбъектXDTO") Тогда
		Если пЗначение2.type = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
			пЗначение1.Наименование = ?(ЗначениеЗаполнено(пЗначение2.Name), пЗначение2.Name, пЗначение2.fullName);
			пЗначение1.НаименованиеПолное = ?(ЗначениеЗаполнено(пЗначение2.fullName), пЗначение2.fullName, пЗначение2.Name);
			пЗначение1.ИНН = пЗначение2.inn;
			пЗначение1.КПП = пЗначение2.kpp;
			пЗначение1.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		Иначе
			пЗначение1.Наименование = пЗначение2.fio;
			пЗначение1.ИНН = пЗначение2.inn;
			пЗначение1.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция EnterpriseДобавить(guid)
	
	_Enterprise = ?(Ветис.Версия_2_0(), ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetEnterpriseByGuid(guid);
	
	_Объект = EnterpriseНайти(_Enterprise);
	
	Если _Объект = Неопределено Тогда
		
		_Объект = Справочники.ВетисПредприятия.СоздатьЭлемент();
		
		EnterpriseКонвертировать(_Объект, _Enterprise);
		
		_Объект.Записать();
		
		Ветис.Журнал_Добавить("+ " + СокрЛП(_Enterprise.name), "Ветис.Enterprise");
		
	КонецЕсли;
	
	//Ветис.Соответствие_Добавить(_Объект.Ссылка, _Enterprise.guid, _Enterprise.name, _Enterprise.address.addressView);
	Ветис.Соответствие_Добавить(_Объект.Ссылка, _Enterprise.guid, _Enterprise.name);
	
	Возврат _Объект.Ссылка;
	
КонецФункции

Функция EnterpriseНайти(_Enterprise)
	
	Если НЕ _Enterprise.numberList = Неопределено И ТипЗнч(_Enterprise.numberList.enterpriseNumber) = Тип("СписокXDTO") И _Enterprise.numberList.enterpriseNumber.Количество() > 0 Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ Первые 1 _Таблица.Ссылка ИЗ Справочник."+ВетисИмяСправочника.Enterprise()+".НомераПредприятия КАК _Таблица ГДЕ _Таблица.Номер В (&Номер)");
		Запрос.УстановитьПараметр("Номер", _Enterprise.numberList.enterpriseNumber[0]);
	ИначеЕсли НЕ _Enterprise.owner = Неопределено Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ Первые 1 _Таблица.Ссылка ИЗ Справочник."+ВетисИмяСправочника.Enterprise()+" КАК _Таблица ГДЕ _Таблица.Собственник В (&Собственник)");
		Запрос.УстановитьПараметр("Собственник", ВетисDictionaryСлой1с.BusinessEntity(_Enterprise.owner));
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	_Выборка = Запрос.Выполнить().Выбрать();
	
	Если _Выборка.Следующий() Тогда
		Возврат _Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура EnterpriseКонвертировать(пЗначение1, пЗначение2) Экспорт
	
	Если ТипЗнч(пЗначение1) = Тип("ОбъектXDTO") Тогда
		//сделать: дополнить конверсию предприятия
		
	ИначеЕсли ТипЗнч(пЗначение2) = Тип("ОбъектXDTO") Тогда
		пЗначение1.Наименование = пЗначение2.Name;
		пЗначение1.Тип =  ВетисCerberusEnterpriseСлой1с.EnterpriseType(пЗначение2.type);
		пЗначение1.Собственник = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пЗначение2.owner);
		
		Если НЕ пЗначение2.address = Неопределено Тогда
			пЗначение1.Страна = ВетисIkarСлой1с.Country(пЗначение2.address.country);
			пЗначение1.Регион = ВетисIkarСлой1с.Region(пЗначение2.address.region);
			пЗначение1.Район = ВетисIkarСлой1с.District(пЗначение2.address.district);
			пЗначение1.НаселенныйПункт = ВетисIkarСлой1с.Locality(пЗначение2.address.locality);
			пЗначение1.АдресПредставление = пЗначение2.address.addressView;
		КонецЕсли;
		
		пЗначение1.НомераПредприятия.Очистить();
		Если НЕ пЗначение2.numberList = Неопределено Тогда
			Для каждого _enterpriseNumber Из пЗначение2.numberList.enterpriseNumber Цикл
				_строка = пЗначение1.НомераПредприятия.Добавить();
				_строка.Номер = _enterpriseNumber;
			КонецЦикла;
		КонецЕсли;
		
		пЗначение1.ВидыДеятельности.Очистить();
		Если НЕ пЗначение2.activityList = Неопределено Тогда
			Для каждого _activity Из пЗначение2.activityList.activity Цикл
				_строка = пЗначение1.ВидыДеятельности.Добавить();
				_строка.Наименование = _activity.name;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция SubProductДобавить(guid)
	
	_SubProduct = ?(Ветис.Версия_2_0(), ВетисProductService_2_0, ВетисProductService).GetSubProductByGuid(guid);
	
	Запрос = Новый Запрос("ВЫБРАТЬ _Таблица.Ссылка ИЗ Справочник.НоменклатурныеГруппы КАК _Таблица ГДЕ НЕ _Таблица.ЭтоГруппа И _Таблица.Наименование В (&Наименование)");
	
	Запрос.УстановитьПараметр("Наименование", _SubProduct.name);
	
	_Объект = Запрос.Выполнить().Выбрать();
	
	Если НЕ _Объект.Следующий() Тогда
		
		_Объект = Справочники.НоменклатурныеГруппы.СоздатьЭлемент();
		
		_Объект.Наименование = _SubProduct.name;
		
		_Объект.Записать();
		
		Ветис.Журнал_Добавить("+ " + СокрЛП(_SubProduct.name), "Ветис.SubProduct");
		
	КонецЕсли;
	
	Ветис.Соответствие_Добавить(_Объект.Ссылка, _SubProduct.guid, _SubProduct.name);
	
	Возврат _Объект.Ссылка;
	
КонецФункции
