
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.ОтборИмя.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборПолноеИмя.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборИНН.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборТип.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборФИО.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборАдрес.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборРегион.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборРайон.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборGuid.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборGLN.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СправочникСписок.Видимость = Ложь;
		Элементы.ВариантПоиска.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СписокВетисКомандаДобавить.Видимость = Ложь;
		Элементы.СписокВетисКомандаЗаполнить.Видимость = Ложь;
		Элементы.СписокВетисГруппа1.Группировка = ГруппировкаКолонок.Вертикальная;
		Элементы.СписокВетисname.Шрифт = Новый Шрифт(Элементы.СписокВетисname.Шрифт,,10,Истина);
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.СписокВетис.Шапка = Ложь;
	#Иначе
		Элементы.КомандаОтбор.Пометка = Истина;
		Элементы.СписокВетисКонтекстноеМенюКомандаСоздатьСвязь.Видимость = Ложь;
		Элементы.СписокВетисКонтекстноеМенюКомандаУдалитьСвязь.Видимость = Ложь;
		Элементы.СправочникСписокguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	#КонецЕсли
	
	Элементы.СписокВетисlink.Видимость = Ложь;
	
	Элементы.СписокВетисguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	
	МаксимальноеКоличество = 100;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ГруппаОтбор1.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаОтбор2.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	#КонецЕсли
	
	УстановитьВидимостьОтВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		УстановитьВидимостьОтВерсии();
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		УстановитьВидимостьОтВерсии();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаНайти(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если ВариантПоиска = "Guid" Тогда
		КомандаНайтиПоGuidСервер(_Отказ, _Ошибка);
	ИначеЕсли ВариантПоиска = "GLN" Тогда
		КомандаНайтиПоGLNСервер();
	Иначе
		КомандаНайтиСервер();
	КонецЕсли;
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСопоставитьАвтоматически(Команда)
	
	_оо = Новый ОписаниеОповещения("КомандаСопоставитьАвтоматическиВопросОбработкаОповещения", ЭтаФорма, "Только выделенные");
	
	ПоказатьВопрос(_оо, "Только выделенные?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСопоставитьАвтоматическиВопросОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если Параметр = "Только выделенные" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			
			СопоставитьАвтоматическиСервер(Истина);
			
			ОбновитьСписок();
			
		Иначе
			
			_оо = Новый ОписаниеОповещения("КомандаСопоставитьАвтоматическиВопросОбработкаОповещения", ЭтаФорма, "длительная операция");
			
			ПоказатьВопрос(_оо, "Это длительная операция без отображения прогресса. Продолжить?", РежимДиалогаВопрос.ДаНет);
			
		КонецЕсли;
		
	ИначеЕсли Параметр = "длительная операция" Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			
			СопоставитьАвтоматическиСервер();
			
			ОбновитьСписок();
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
		
		_Параметры = Новый Структура("guid,name,inn", _ТекущиеДанные.guid, _ТекущиеДанные.name, _ТекущиеДанные.inn);
		
		ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "КомандаСоздатьСвязьВыборОбработкаОповещения",,,_Параметры);
		
		Возврат;
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущиеДанные = Неопределено ИЛИ Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		_ТекущиеДанныеВетис = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
		
		Для Каждого _ТекущиеДанные1сСсылка из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Добавить(_ТекущиеДанные1сСсылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name, _ТекущиеДанныеВетис.inn);
		КонецЦикла;
		
		ОбновитьСписок();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ВетисВызовСервера.Соответствие_Удалить(Элементы.СписокВетис.ТекущиеДанные.guid, ВетисИмяСправочника.BusinessEntity("СправочникСсылка"));
		
	#Иначе

		Для Каждого _ТекущиеДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Удалить(_ТекущиеДанные, "СправочникСсылка.Контрагенты");
		КонецЦикла;
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
	
	_Параметры = Новый Структура("name,fullName,inn,type", _ТекущиеДанные.name, _ТекущиеДанные.fullName, _ТекущиеДанные.inn, _ТекущиеДанные.type);
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "КомандаЗаполнитьИзСервисаВыборОбработкаОповещения",,,_Параметры);
		
		Возврат;
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено 
			ИЛИ Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(Элементы.СправочникСписок.ТекущаяСтрока, _Параметры);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//_оо = Новый ОписаниеОповещения("КомандаДобавитьОбработкаОповещенияОЗакрытии", ЭтаФорма);
	//
	//_форма = ОткрытьФорму(ВетисИмяСправочника.BusinessEntity("Справочник", "ФормаОбъекта"),,,,,,_оо);
	_форма = ОткрытьФорму(ВетисИмяСправочника.BusinessEntity("Справочник", "ФормаОбъекта"));
	
	_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
	_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
	_форма.Объект.ИНН = Элементы.СписокВетис.ТекущиеДанные.inn;
	_форма.Объект.ЮрФизЛицо = ?(Элементы.СписокВетис.ТекущиеДанные.type = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо"), ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"), ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправочникДобавить(Команда)
	
	Форма = ОткрытьФорму(ВетисИмяСправочника.BusinessEntity("Справочник", "ФормаОбъекта"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.КомандаОтбор.Пометка = НЕ Элементы.КомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.КомандаОтбор.Пометка;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСоздатьСвязьВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		ВетисВызовСервера.Соответствие_Добавить(пРезультат, пПараметры.guid, пПараметры.name, пПараметры.inn);
		
		ОбновитьСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		_форма = ОткрытьФорму(ВетисИмяСправочника.BusinessEntity("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", пРезультат));
		
		_форма.Объект.Наименование = пПараметры.name;
		_форма.Объект.НаименованиеПолное = пПараметры.fullName;
		_форма.Объект.ИНН = пПараметры.inn;
		_форма.Объект.ЮрФизЛицо = ?(пПараметры.type = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо"), ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо"), ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПоискаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Выполнить(Элемент.Имя+"Использование=ЗначениеЗаполнено("+Элемент.Имя+");");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРегионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.RegionФормаВыбора(ЭтаФорма, "ОтборРегионОбработкаОповещения", СтандартнаяОбработка, ОтборРегион);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРегионОбработкаОповещения(пРезультат, пПараметр) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		ОтборРегион = пРезультат;
		ОтборРегионИспользование = ЗначениеЗаполнено(ОтборРегион);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРайонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.DistrictФормаВыбора(ЭтаФорма, "ОтборРайонОбработкаОповещения", СтандартнаяОбработка, ОтборРайон);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРайонОбработкаОповещения(пРезультат, пПараметр) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		ОтборРайон = пРезультат;
		ОтборРайонИспользование = ЗначениеЗаполнено(ОтборРайон);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.СправочникСписок.ТекущаяСтрока = ВетисВызовСервера.Соответствие_ПолучитьСсылку(Элементы.СписокВетис.ТекущиеДанные.guid, "Справочник.Контрагенты");
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	СтандартнаяОбработка = Ложь;
	
	_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	ОтборПолноеИмя = _ТекущиеДанные.Наименование;
	
	ОтборИНН = _ТекущиеДанные.ИНН;
	#КонецЕсли
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьОтВерсии()
	
	Элементы.ВариантПоиска.СписокВыбора.Очистить();
	Элементы.ВариантПоиска.СписокВыбора.Добавить("NameAdr", "Имя, ИНН, Адрес");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("Guid", "guid");
	
	ВариантПоиска = "NameAdr";
	
	Если ВетисВызовСервера.Версия_2_0() Тогда
		ОтборПолноеИмяИспользование = Ложь;
		Элементы.ГруппаОтборПолноеИмя.Видимость = Ложь;
		Элементы.ГруппаОтборИмя.Видимость = Истина;
		Элементы.ГруппаОтборРегион.Видимость = Истина;
		Элементы.ГруппаОтборРайон.Видимость = Истина;
		Элементы.ВариантПоиска.СписокВыбора.Добавить("GLN", "GLN");
	Иначе
		ОтборИмяИспользование = Ложь;
		ОтборРегионИспользование = Ложь;
		ОтборРайонИспользование = Ложь;
		Элементы.ГруппаОтборПолноеИмя.Видимость = Истина;
		Элементы.ГруппаОтборИмя.Видимость = Ложь;
		Элементы.ГруппаОтборРегион.Видимость = Ложь;
		Элементы.ГруппаОтборРайон.Видимость = Ложь;
		_ВариантПоиска = Элементы.ВариантПоиска.СписокВыбора.НайтиПоЗначению("GLN");
		Если НЕ _ВариантПоиска = Неопределено Тогда
			Элементы.ВариантПоиска.СписокВыбора.Удалить(_ВариантПоиска);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ГруппаОтборGuid.Видимость = ВариантПоиска = "Guid";
	Элементы.ГруппаОтборGLN.Видимость = ВариантПоиска = "GLN";
	Элементы.ГруппаОтбор1.Видимость = ВариантПоиска = "NameAdr";
	Элементы.ГруппаОтбор2.Видимость = ВариантПоиска = "NameAdr";
	Элементы.МаксимальноеКоличество.Видимость = ВариантПоиска = "NameAdr";
	
	//Элементы.ОтборИмя.Доступность = ОтборИмяИспользование;
	//Элементы.ОтборИНН.Доступность = ОтборИННИспользование;
	//Элементы.ОтборТип.Доступность = ОтборТипИспользование;
	//Элементы.ОтборФИО.Доступность = ОтборФИОИспользование;
	//Элементы.ОтборПолноеИмя.Доступность = ОтборПолноеИмяИспользование;
	//Элементы.ОтборАдрес.Доступность = ОтборАдресИспользование;
	//Элементы.ОтборРайон.Доступность = ОтборРайонИспользование;
	//Элементы.ОтборРегион.Доступность = ОтборРегионИспользование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	Элементы.СправочникСписок.Обновить();
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура КомандаНайтиСервер()
	
	Перем _businessEntity, _параметры;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисEnterpriseService = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService);
	_ВетисCerberusEnterpriseСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с);
	_ВетисIkarСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с);
	
	СписокВетис.Очистить();
	
	_Отбор = Новый Структура;
	
	Если ОтборИмяИспользование Тогда
		_Отбор.Вставить("name", ОтборИмя);
	КонецЕсли;
	
	Если ОтборПолноеИмяИспользование Тогда
		_Отбор.Вставить("fullName", ОтборПолноеИмя);
	КонецЕсли;
	
	Если ОтборИННИспользование Тогда
		_Отбор.Вставить("inn", ОтборИНН);
	КонецЕсли;
	
	Если ОтборФИОИспользование Тогда
		_Отбор.Вставить("fio", ОтборФИО);
	КонецЕсли;
	
	Если ОтборРайонИспользование ИЛИ ОтборРегионИспользование Тогда
		_отборадрес = Новый Структура();
		Если ОтборРегионИспользование Тогда
			_отборадрес.Вставить("region", Новый Структура("guid", _ВетисIkarСлой1с.Region(ОтборРегион)));
		КонецЕсли;
		Если ОтборРайонИспользование Тогда
			_отборадрес.Вставить("district", Новый Структура("guid", _ВетисIkarСлой1с.District(ОтборРайон)));
		КонецЕсли;
		_отбор.Вставить("juridicalAddress", _отборадрес);
	КонецЕсли;
	
	_ОтборТип = _ВетисCerberusEnterpriseСлой1с.BusinessEntityType(ОтборТип);
	_ОтборАдрес = ВРег(ОтборАдрес);
	
	_параметры = Новый Структура("count", ?(МаксимальноеКоличество > 1000, Неопределено, МаксимальноеКоличество));
	
	Пока _ВетисEnterpriseService.GetBusinessEntityListСледующий(_Отбор, _businessEntity, _параметры) Цикл
		
		Если ОтборАдресИспользование И Найти(ВРег(_businessEntity.juridicalAddress.addressView), _ОтборАдрес) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтборТипИспользование И НЕ _ОтборТип = _businessEntity.type Тогда
			Продолжить;
		КонецЕсли;
		
		СписокВетисДобавить(_businessEntity);
		
		Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		
	КонецЦикла;
	
	СписокВетис.Сортировать("name");
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGuidСервер(пОтказ = Ложь, пОшибка = "")
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборGuid) Тогда Возврат; КонецЕсли;
	
	_businessEntity = ?(Ветис.Версия_2_0(), ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetBusinessEntityByGuid(ОтборGuid, пОтказ, пОшибка);
	
	Если НЕ пОтказ = Истина Тогда
		СписокВетисДобавить(_businessEntity);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGLNСервер()
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборGLN) Тогда Возврат; КонецЕсли;
	
	Если НЕ Ветис.Версия_2_0() Тогда Возврат; КонецЕсли;
	
	_businessMember = ВетисEnterpriseService_2_0.GetBusinessMemberByGLN(ОтборGLN);
	
	_businessEntity = _businessMember.businessEntity;
	
	СписокВетисДобавить(_businessMember.businessEntity);
	
КонецПроцедуры

&НаСервере
Процедура СопоставитьАвтоматическиСервер(пТолькоВыделенныеСтроки = Ложь)
	
	//сопоставляет автоматически по ИНН
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисEnterpriseService = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.ИНН,
	|	_Таблица.Наименование
	|ИЗ
	|	Справочник."+ВетисИмяСправочника.BusinessEntity()+" КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|//ос	И _Таблица.Ссылка В (&Список)
	|	И НЕ _Таблица.ПометкаУдаления
	|	И НЕ _Таблица.ЭтоГруппа
	|	И ИСТИНА";
	
	//если больше одной строки, то пройдем только по выделенным
	
	#Если НЕ МобильноеПриложениеСервер Тогда
	Если пТолькоВыделенныеСтроки = Ложь Тогда
		//
	ИначеЕсли Элементы.СправочникСписок.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	Иначе
		Запрос.УстановитьПараметр("Список", Элементы.СправочникСписок.ВыделенныеСтроки);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ос", "");
	КонецЕсли;
	#КонецЕсли
	
	_список = Запрос.Выполнить().Выгрузить();
	
	Для Каждого _ТекущиеДанные из _список Цикл 
		
		Если ЗначениеЗаполнено(_ТекущиеДанные.ИНН) Тогда
			
			_Отбор          = Новый Структура("inn", _ТекущиеДанные.ИНН);
			_businessEntity = Неопределено;
			_параметры      = Неопределено;
			
			Пока _ВетисEnterpriseService.GetBusinessEntityListСледующий(_Отбор, _businessEntity, _параметры) Цикл
				
				_name = _businessEntity.name;
				
				Если _businessEntity.type = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
					Если ЗначениеЗаполнено(_businessEntity.fullName) Тогда
						_name = _businessEntity.fullName;
					Иначе
						_name = _businessEntity.Name;
					КонецЕсли;
				Иначе
					_name = _businessEntity.fio;
				КонецЕсли;
				
				ВетисВызовСервера.Соответствие_Добавить(_ТекущиеДанные.Ссылка, _businessEntity.guid, _name, _businessEntity.inn);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура СписокВетисДобавить(пBusinessEntity)
	
	_СписокВетисСтрока = СписокВетис.Добавить();
	
	ЗаполнитьЗначенияСвойств(_СписокВетисСтрока, пBusinessEntity);
	
	Если пBusinessEntity.type = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
		_СписокВетисСтрока.name = ?(пBusinessEntity.name = Неопределено, пBusinessEntity.fullName, пBusinessEntity.name);
		_СписокВетисСтрока.fullName = ?(пBusinessEntity.fullName = Неопределено, пBusinessEntity.name, пBusinessEntity.fullName);
	Иначе
		_СписокВетисСтрока.name = пBusinessEntity.fio;
	КонецЕсли;
	
	_СписокВетисСтрока.address = пBusinessEntity.juridicalAddress.addressView;
	
	_СписокВетисСтрока.link = Ветис.Соответствие_ПолучитьСсылку(пBusinessEntity.guid, ВетисИмяСправочника.BusinessEntity("Справочник"));
	
КонецПроцедуры
