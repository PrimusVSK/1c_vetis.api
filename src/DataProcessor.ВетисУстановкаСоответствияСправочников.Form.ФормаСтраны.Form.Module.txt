
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.ОтборИмя.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборКод.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборПолноеИмя.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборGuid.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СправочникСписок.Видимость = Ложь;
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.СписокВетисКомандаДобавитьИзСервиса.Видимость = Ложь;
		Элементы.СписокВетисКомандаЗаполнитьИзСервиса.Видимость = Ложь;
	#Иначе
		Элементы.ФормаКомандаОтбор.Пометка = Истина;
		Элементы.СписокВетисКонтекстноеМенюКомандаСоздатьСвязь.Видимость = Ложь;
		Элементы.СписокВетисКонтекстноеМенюКомандаУдалитьСвязь.Видимость = Ложь;
	#КонецЕсли
	
	Элементы.ВариантПоиска.СписокВыбора.Очистить();
	Элементы.ВариантПоиска.СписокВыбора.Добавить("Name", "Имя, Код");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("Guid", "guid");
	
	ВариантПоиска = "Name";
	
	СправочникСписок.ПроизвольныйЗапрос = Истина;
	СправочникСписок.ОсновнаяТаблица = ВетисИмяСправочника.Country("Справочник");
	СправочникСписок.ТекстЗапроса =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Код,
	|	_Таблица.Наименование КАК name,
	|	_Ветис.guid КАК guid,
	|	_Ветис.name КАК Ветисname,
	|	_Ветис.Описание КАК ВетисОписание
	|ИЗ
	|	Справочник."+ВетисИмяСправочника.Country()+" КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка";
	
	Элементы.СписокВетисguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ГруппаОтбор1.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	#КонецЕсли
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаНайти(Команда)
	
	Если ВариантПоиска = "Guid" Тогда
		КомандаНайтиПоGuidСервер();
	Иначе
		КомандаНайтиПоИмениСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		_Параметры = Новый Структура("guid, name", Элементы.СписокВетис.ТекущиеДанные.guid, Элементы.СписокВетис.ТекущиеДанные.name);
		
		ВетисФормы.CountryФормаВыбора(ЭтаФорма, "КомандаСоздатьСвязьВыборОбработкаОповещения", , , _Параметры);
		
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущиеДанные = Неопределено ИЛИ Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		_ТекущиеДанныеВетис = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
		
		Для Каждого _ТекущиеДанные1сСсылка из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Добавить(_ТекущиеДанные1сСсылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name);
		КонецЦикла;
		
		ОбновитьСписок();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ВетисВызовСервера.Соответствие_Удалить(Элементы.СписокВетис.ТекущиеДанные.guid, ВетисИмяСправочника.Country("СправочникСсылка"));
		
	#Иначе
		
		Для Каждого _ТекущиеДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Удалить(_ТекущиеДанные, "СправочникСсылка.КлассификаторСтранМира");
		КонецЦикла;
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ВетисФормы.CountryФормаВыбора(ЭтаФорма, "КомандаЗаполнитьИзСервисаВыборОбработкаОповещения");
		
		Возврат;
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено 
			ИЛИ Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		_форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
		
		_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
		_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	_форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"));
	
	_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
	_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСправочникДобавить(Команда)
	
	Форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.ФормаКомандаОтбор.Пометка = НЕ Элементы.ФормаКомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаКомандаОтбор.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязьВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		ВетисВызовСервера.Соответствие_Добавить(пРезультат, пПараметры.guid, пПараметры.name);
		
		ОбновитьСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(пРезультат, пПараметр) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		_форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", пРезультат));
		
		_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
		_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПоискаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Выполнить(Элемент.Имя+"Использование=ЗначениеЗаполнено("+Элемент.Имя+");");
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.СправочникСписок.ТекущаяСтрока = ВетисВызовСервера.Соответствие_ПолучитьСсылку(Элементы.СписокВетис.ТекущиеДанные.guid, "Справочник.КлассификаторСтранМира");
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	СтандартнаяОбработка = Ложь;
	
	_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	_СтраныВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекущиеДанные.name));
	
	ОтборПолноеИмя = _ТекущиеДанные.Наименование;
	
	Если _СтраныВетисСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СписокВетис.ТекущаяСтрока = _СтраныВетисСтроки[0].ПолучитьИдентификатор();
	#КонецЕсли
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ОтборGuid.Видимость = ВариантПоиска = "Guid";
	Элементы.ГруппаОтбор1.Видимость = ВариантПоиска = "Name";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	Элементы.СправочникСписок.Обновить();
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура КомандаНайтиПоИмениСервер()
	
	Перем _country, _Параметры;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисIkarService = ?(_Версия20, ВетисIkarService_2_0, ВетисIkarService);
	
	СписокВетис.Очистить();
	
	_ОтборКод = ВРег(ОтборКод);
	_ОтборИмя = ВРег(ОтборИмя);
	_ОтборПолноеИмя = ВРег(ОтборПолноеИмя);
	
	Пока _ВетисIkarService.GetAllCountryListСледующий(_country, _Параметры) Цикл
		
		Если ОтборКодИспользование И Найти(ВРег(СокрЛП(_country.code)), _ОтборКод) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтборИмяИспользование И Найти(ВРег(СокрЛП(_country.name)), _ОтборИмя) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтборПолноеИмяИспользование И Найти(ВРег(СокрЛП(_country.fullName)), _ОтборПолноеИмя) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		_Строка = СписокВетис.Добавить();
		
		ЗаполнитьЗначенияСвойств(_Строка, _country);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGuidСервер()
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборGuid) Тогда Возврат; КонецЕсли;
	
	_country = ?(Ветис.Версия_2_0(), ВетисIkarService_2_0, ВетисIkarService).GetCountryByGuid(ОтборGuid);
	
	ЗаполнитьЗначенияСвойств(СписокВетис.Добавить(), _country);
	
КонецПроцедуры

