
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.ОтборХозяйствующийСубъект.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборBusinessEntityGuid.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборНаименование.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборРегион.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборРайон.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборGuid.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборНомер.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		//Элементы.МаксимальноеКоличество.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СправочникСписок.Видимость = Ложь;
		Элементы.ВариантПоиска.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СписокВетисКомандаДобавитьИзСервиса.Видимость = Ложь;
		Элементы.СписокВетисКомандаЗаполнитьИзСервиса.Видимость = Ложь;
		Элементы.СписокВетисКомандаПривязатьПредприятиеХС.Видимость = Ложь;
		Элементы.СписокВетисКомандаОтвязатьПредприятиеХС.Видимость = Ложь;
		Элементы.СписокВетисГруппа1.Группировка = ГруппировкаКолонок.Вертикальная;
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.СписокВетисowner.Видимость = Ложь;
		Элементы.СписокВетис.Шапка = Ложь;
	#Иначе
		Элементы.ФормаКомандаОтбор.Пометка = Истина;
		Элементы.СписокВетисКонтекстноеМенюКомандаСоздатьСвязь.Видимость = Ложь;
		Элементы.СписокВетисКонтекстноеМенюКомандаУдалитьСвязь.Видимость = Ложь;
		Элементы.СправочникСписокguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	#КонецЕсли
	
	Элементы.СписокВетисguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	
	МаксимальноеКоличество = 100;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ГруппаОтборИмя.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаОтборАдрес.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	#КонецЕсли
	
	УстановитьВидимостьОтВерсии();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		УстановитьВидимостьОтВерсии();
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		УстановитьВидимостьОтВерсии();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаНайти(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВариантПоиска) Тогда
		Возврат
	КонецЕсли;
	
	_Вариант = ВариантПоиска;
	
	Если _Вариант = "BE" Тогда
		КомандаНайтиПоGuidСервер(Объект.ХозяйствующийСубъект, Истина);
	ИначеЕсли _Вариант = "GuidBE" Тогда
		КомандаНайтиПоGuidСервер(ОтборBusinessEntityGuid, Истина);
	ИначеЕсли _Вариант = "GuidEnt" Тогда
		КомандаНайтиПоGuidСервер(ОтборGuid);
	ИначеЕсли ВариантПоиска = "GLN" Тогда
		КомандаНайтиПоGLNСервер();
	Иначе
		КомандаНайтиПоИмениСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
		
		_Параметры = Новый Структура("guid,name,address", _ТекущиеДанные.guid, _ТекущиеДанные.name, _ТекущиеДанные.address);
		
		Если ВариантПоиска = "BE" Тогда
			ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "КомандаСоздатьСвязьВыборОбработкаОповещения",,, Объект.ХозяйствующийСубъект,_Параметры);
		Иначе
			ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "КомандаСоздатьСвязьВыборОбработкаОповещения",,,,_Параметры);
		КонецЕсли;
		
		Возврат;
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущиеДанные = Неопределено ИЛИ Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		_ТекущиеДанныеВетис = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
		
		//Для Каждого _ТекущиеДанные1сСсылка из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
		//	ВетисВызовСервера.Соответствие_Добавить(_ТекущиеДанные1сСсылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name, _ТекущиеДанныеВетис.address);
		//КонецЦикла;
		ВетисВызовСервера.Соответствие_Добавить(Элементы.СправочникСписок.ТекущиеДанные.Ссылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name, _ТекущиеДанныеВетис.address);
		
		ОбновитьСписок();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ВетисВызовСервера.Соответствие_Удалить(Элементы.СписокВетис.ТекущиеДанные.guid, ВетисИмяСправочника.Enterprise("СправочникСсылка"));
		
	#Иначе
		
		//Для Каждого _ТекущиеДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Удалить(Элементы.СправочникСписок.ТекущиеДанные.Ссылка, ВетисИмяСправочника.Enterprise("СправочникСсылка"));
		//КонецЦикла;
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		_реквизиты = ПолучитьРеквизитыНаСервере();
		
		Если ВариантПоиска = "BE" Тогда
			ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "КомандаЗаполнитьИзСервисаВыборОбработкаОповещения",,, Объект.ХозяйствующийСубъект, _реквизиты);
		Иначе
			ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "КомандаЗаполнитьИзСервисаВыборОбработкаОповещения",,,, _реквизиты);
		КонецЕсли;
		
		Возврат;
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено 
			ИЛИ Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		_форма = ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
		
		_реквизиты = ПолучитьРеквизитыНаСервере();
		
		ЗаполнитьЗначенияСвойств(_форма.Объект, _реквизиты, , "НомераПредприятия");
		
		Для каждого _реквизит Из _реквизиты.НомераПредприятия Цикл
			_строка = _форма.Объект.НомераПредприятия.Добавить();
			_строка.Номер = _реквизит.Значение;
		КонецЦикла;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	_форма = ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"));
	
	_реквизиты = ПолучитьРеквизитыНаСервере();
	
	ЗаполнитьЗначенияСвойств(_форма.Объект, _реквизиты, , "НомераПредприятия");
	
	_форма.Объект.НомераПредприятия.Очистить();
	Для каждого _реквизит Из _реквизиты.НомераПредприятия Цикл
		_строка = _форма.Объект.НомераПредприятия.Добавить();
		_строка.Номер = _реквизит.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтвязатьПредприятиеХС(Команда)
	
	#Если МобильноеПриложениеСервер Тогда
		
		_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
		
		_Предприятие = ?(ВетисВызовСервера.Версия_2_0(), ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).Enterprise(_ТекущиеДанные.guid);
		
		ВетисХозяйственныеОперации.ОтвязатьХСПредприятие(Объект.ХозяйствующийСубъект, _Предприятие);
		
	#Иначе
		_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		Если _ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(_ТекущиеДанные.guid) Тогда
			Возврат;
		КонецЕсли;
		
		ВетисХозяйственныеОперации.ОтвязатьХСПредприятие(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка);
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПривязатьПредприятиеХС(Команда)
	
	#Если МобильноеПриложениеСервер Тогда
		
		_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
		
		_Предприятие = ?(ВетисВызовСервера.Версия_2_0(), ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).Enterprise(_ТекущиеДанные.guid);
		
		ВетисХозяйственныеОперации.ПривязатьХСПредприятие(Объект.ХозяйствующийСубъект, _Предприятие);
		
	#Иначе
		_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		Если _ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(_ТекущиеДанные.guid) Тогда
			Возврат;
		КонецЕсли;
		
		ВетисХозяйственныеОперации.ПривязатьХСПредприятие(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка);
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.ФормаКомандаОтбор.Пометка = НЕ Элементы.ФормаКомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаКомандаОтбор.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязьВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		ВетисВызовСервера.Соответствие_Добавить(пРезультат, пПараметры.guid, пПараметры.name, пПараметры.address);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		_форма = ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", пРезультат));
		
		_реквизиты = пПараметры;
		
		ЗаполнитьЗначенияСвойств(_форма.Объект, _реквизиты, , "НомераПредприятия");
		
		Для каждого _реквизит Из _реквизиты.НомераПредприятия Цикл
			_строка = _форма.Объект.НомераПредприятия.Добавить();
			_строка.Номер = _реквизит.Значение;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантПоискаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Выполнить(Элемент.Имя+"Использование=ЗначениеЗаполнено("+Элемент.Имя+");");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРегионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.RegionФормаВыбора(ЭтаФорма, "ОтборРегионОбработкаОповещения", СтандартнаяОбработка, ОтборРегион);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРегионОбработкаОповещения(пРезультат, пПараметр) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		ОтборРегион = пРезультат;
		ОтборРегионИспользование = ЗначениеЗаполнено(ОтборРегион);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРайонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.DistrictФормаВыбора(ЭтаФорма, "ОтборРайонОбработкаОповещения", СтандартнаяОбработка, ОтборРайон);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРайонОбработкаОповещения(пРезультат, пПараметр) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		ОтборРайон = пРезультат;
		ОтборРайонИспользование = ЗначениеЗаполнено(ОтборРайон);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборХозяйствующийСубъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ОтборХозяйствующийСубъектНачалоВыбораОбработкаОповещения", СтандартнаяОбработка, Объект.ХозяйствующийСубъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборХозяйствующийСубъектНачалоВыбораОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		Объект.ХозяйствующийСубъект = пРезультат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьОтВерсии()
	
	Элементы.ВариантПоиска.СписокВыбора.Очистить();
	Элементы.ВариантПоиска.СписокВыбора.Добавить("NameAdr", "Имя, Адрес");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("GuidEnt", "guid Предприятия");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("BE", "ХС");
	Элементы.ВариантПоиска.СписокВыбора.Добавить("GuidBE", "guid ХС");
	
	ВариантПоиска = "NameAdr";
	
	Если ВетисВызовСервера.Версия_2_0() Тогда
		Элементы.ВариантПоиска.СписокВыбора.Добавить("GLN", "GLN");
	Иначе
		//
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	//ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СправочникСписок.Отбор, "ХозяйствующийСубъект", Объект.ХозяйствующийСубъект, , ВариантПоиска = "BE");
	
	Элементы.ОтборХозяйствующийСубъект.Видимость = ВариантПоиска = "BE";
	Элементы.ОтборBusinessEntityGuid.Видимость = ВариантПоиска = "GuidBE";
	Элементы.ОтборGuid.Видимость = ВариантПоиска = "GuidEnt";
	Элементы.ГруппаОтборGLN.Видимость = ВариантПоиска = "GLN";
	Элементы.ГруппаОтборИмя.Видимость = ВариантПоиска = "NameAdr";
	Элементы.ГруппаОтборАдрес.Видимость = ВариантПоиска = "NameAdr";
	Элементы.МаксимальноеКоличество.Видимость = ВариантПоиска = "NameAdr";
	
	Элементы.СписокВетисКомандаПривязатьПредприятиеХС.Видимость = ВариантПоиска = "BE";
	Элементы.СписокВетисКомандаОтвязатьПредприятиеХС.Видимость = ВариантПоиска = "BE";
	
	Элементы.СписокВетисКонтекстноеМенюКомандаПривязатьПредприятиеХС.Видимость = ВариантПоиска = "BE";
	Элементы.СписокВетисКонтекстноеМенюКомандаОтвязатьПредприятиеХС.Видимость = ВариантПоиска = "BE";
	
	//Элементы.ОтборНаименование.Доступность = ОтборНаименованиеИспользование;
	//Элементы.ОтборРайон.Доступность = ОтборРайонИспользование;
	//Элементы.ОтборРегион.Доступность = ОтборРегионИспользование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	Элементы.СправочникСписок.Обновить();
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура КомандаНайтиПоИмениСервер()
	
	Перем _Enterprise, _Параметры;
	
	_Версия20 = Ветис.Версия_2_0();
	
	СписокВетис.Очистить();
	
	_отбор = Новый Структура();
	
	Если ОтборНаименованиеИспользование Тогда
		_отбор.Вставить("name", ОтборНаименование);
	КонецЕсли;
	
	Если ОтборРайонИспользование ИЛИ ОтборРегионИспользование Тогда
		_отборадрес = Новый Структура();
		Если ОтборРегионИспользование Тогда
			_отборадрес.Вставить("region", Новый Структура("guid", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(ОтборРегион)));
		КонецЕсли;
		Если ОтборРайонИспользование Тогда
			_отборадрес.Вставить("district", Новый Структура("guid", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(ОтборРайон)));
		КонецЕсли;
		_отбор.Вставить("address", _отборадрес);
	КонецЕсли;
	
	_ОтборНомер = ОтборНомер;
	
	Если _Версия20 Тогда
		Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			Если ОтборНомерИспользование И НЕ ЕстьНомер(_ОтборНомер, _Enterprise.numberList) Тогда
				Продолжить;
			КонецЕсли;
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	Иначе
		Пока ВетисEnterpriseService.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			Если ОтборНомерИспользование И НЕ ЕстьНомер(_ОтборНомер, _Enterprise.numberList) Тогда
				Продолжить;
			КонецЕсли;
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGuidСервер(пGuid, пОтборПоХС = Ложь, пОтказ = Ложь, пОшибка = "")
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(пGuid) Тогда Возврат; КонецЕсли;
	
	_Версия20 = Ветис.Версия_2_0();
	
	Если пОтборПоХС Тогда
		
		Если ТипЗнч(пGuid) = Тип("Строка") Тогда
			_Guid = пGuid;
		Иначе
			_Guid = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(пGuid);
		КонецЕсли;
		
		Пока ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetActivityLocationListСледующий(_Guid, _Enterprise, _Параметры, пОтказ, пОшибка) Цикл
			СписокВетисДобавить(_Enterprise);
		КонецЦикла;
		
	Иначе
		
		_Enterprise = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetEnterpriseByGuid(пGuid, пОтказ, пОшибка);
		
		Если НЕ пОтказ = Истина Тогда
			СписокВетисДобавить(_Enterprise);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиПоGLNСервер(пОтказ = Ложь, пОшибка = "")
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборGuid) Тогда Возврат; КонецЕсли;
	
	Если НЕ Ветис.Версия_2_0() Тогда Возврат; КонецЕсли;
	
	_businessMember = ВетисEnterpriseService_2_0.GetBusinessMemberByGLN(ОтборGLN, пОтказ, пОшибка);
	
	Если НЕ пОтказ = Истина Тогда
		СписокВетисДобавить(_businessMember.enterprise);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисДобавить(пEnterprise)
	
	//в 2.0 в тесте найдены дубли 2017-10-26
	Если СписокВетис.НайтиСтроки(Новый Структура("guid", пEnterprise.guid)).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	_СписокВетисСтрока = СписокВетис.Добавить();
	
	_СписокВетисСтрока.guid = пEnterprise.guid;
	_СписокВетисСтрока.name = пEnterprise.name;
	_СписокВетисСтрока.type = пEnterprise.type;
	_СписокВетисСтрока.owner = ?(пEnterprise.owner = Неопределено, "", пEnterprise.owner.guid);
	//_СписокВетисСтрока.Владелец = ?(Ветис.Версия_2_0(), ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(пEnterprise.owner);
	
	Если НЕ пEnterprise.address = Неопределено Тогда
		_СписокВетисСтрока.country  = ?(пEnterprise.address.country = Неопределено, "", пEnterprise.address.country.guid);
		_СписокВетисСтрока.region   = ?(пEnterprise.address.region = Неопределено, "", пEnterprise.address.region.guid);
		_СписокВетисСтрока.district = ?(пEnterprise.address.district = Неопределено, "", пEnterprise.address.district.guid);
		_СписокВетисСтрока.locality = ?(пEnterprise.address.locality = Неопределено, "", пEnterprise.address.locality.guid);
		_СписокВетисСтрока.street   = ?(пEnterprise.address.street = Неопределено, "", пEnterprise.address.street.guid);
		_СписокВетисСтрока.address  = пEnterprise.address.addressView;
	КонецЕсли;
	
	Если НЕ пEnterprise.numberList = Неопределено Тогда
		Для каждого _enterpriseNumber Из пEnterprise.numberList.enterpriseNumber Цикл
			_СписокВетисСтрока.numberList.Добавить(_enterpriseNumber);
		КонецЦикла;
	КонецЕсли;
	
	_СписокВетисСтрока.link = НЕ Ветис.Соответствие_ПолучитьСсылку(пEnterprise.guid, ВетисИмяСправочника.Enterprise("Справочник"), Ложь) = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыНаСервере()
	
	_Версия20 = Ветис.Версия_2_0();
	
	Для Каждого _ТекущаяСтрока из Элементы.СписокВетис.ВыделенныеСтроки Цикл
		_ТекущиеДанные = СписокВетис.НайтиПоИдентификатору(_ТекущаяСтрока);
		
		_Предприятие = Новый Структура;
		
		_Предприятие.Вставить("Наименование", _ТекущиеДанные.name);
		_Предприятие.Вставить("Тип", ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).EnterpriseType(_ТекущиеДанные.type));
		_Предприятие.Вставить("Собственник", ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(_ТекущиеДанные.owner));
		
		_Предприятие.Вставить("Страна", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Country(_ТекущиеДанные.country));
		_Предприятие.Вставить("Регион", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(_ТекущиеДанные.region));
		_Предприятие.Вставить("Район", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(_ТекущиеДанные.district));
		_Предприятие.Вставить("НаселенныйПункт", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Locality(_ТекущиеДанные.locality));
		_Предприятие.Вставить("АдресПредставление", _ТекущиеДанные.address);
		
		_Предприятие.Вставить("НомераПредприятия", _ТекущиеДанные.numberList);
		
		Возврат _Предприятие;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ЕстьНомер(пОтборНомер, numberList)
	
	Если numberList = Неопределено Тогда
		//если номеров нет то пропускаем
		Возврат Ложь;
	Иначе
		_найден = Ложь;
		Для каждого _enterpriseNumber Из numberList.enterpriseNumber Цикл
			Если пОтборНомер = _enterpriseNumber Тогда
				_найден = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Возврат _найден;
	КонецЕсли;
	
КонецФункции
