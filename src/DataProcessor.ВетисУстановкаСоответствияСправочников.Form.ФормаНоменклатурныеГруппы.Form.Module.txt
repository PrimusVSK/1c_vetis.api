
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.ОтборТипПродукции.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборПродукция.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СправочникСписок.Видимость = Ложь;
		Элементы.ГруппаОтбор.Видимость = Ложь;
		Элементы.СписокВетис.Шапка = Ложь;
	#Иначе
		Элементы.ФормаКомандаОтбор.Пометка = Истина;
		Элементы.СписокВетисКонтекстноеМенюКомандаСоздатьСвязь.Видимость = Ложь;
		Элементы.СписокВетисКонтекстноеМенюКомандаУдалитьСвязь.Видимость = Ложь;
	#КонецЕсли
	
	СправочникСписок.ПроизвольныйЗапрос = Истина;
	СправочникСписок.ОсновнаяТаблица = ВетисИмяСправочника.SubProduct("Справочник");
	СправочникСписок.ТекстЗапроса =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Код,
	|	_Таблица.Наименование КАК name,
	|	_Ветис.guid КАК guid,
	|	_Ветис.name КАК Ветисname,
	|	_Ветис.Описание КАК ВетисОписание
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	Код,
	|	name,
	|	guid,
	|	Ветисname,
	|	ВетисОписание}
	|ИЗ
	|	Справочник."+ВетисИмяСправочника.SubProduct()+" КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления
	|	И НЕ _Таблица.ЭтоГруппа
	|	И ИСТИНА";
	
	ОтборТипПродукции = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
	
	Элементы.СписокВетисguid.Видимость = Ветис.Настройки_ПоказыватьGuid();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ГруппаОтбор.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	#КонецЕсли
	
	ЗаполнитьСписокПродукцииСервер();
	
	ЗаполнитьСписокВидовПродукцииСервер();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаНайти(Команда)
	
	КомандаНайтиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		_Параметры = Новый Структура("guid, name", Элементы.СписокВетис.ТекущиеДанные.guid, Элементы.СписокВетис.ТекущиеДанные.name);
		
		ВетисФормы.SubProductФормаВыбора(ЭтаФорма, "КомандаСоздатьСвязьВыборОбработкаОповещения",,,_Параметры);
		
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущиеДанные = Неопределено ИЛИ Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		_ТекущиеДанныеВетис = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
		
		Для Каждого _ТекущиеДанные1сСсылка из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Добавить(_ТекущиеДанные1сСсылка, _ТекущиеДанныеВетис.guid, _ТекущиеДанныеВетис.name);
		КонецЦикла;
		
		ОбновитьСписок();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		ВетисВызовСервера.Соответствие_Удалить(Элементы.СписокВетис.ТекущиеДанные.guid, ВетисИмяСправочника.SubProduct("СправочникСсылка"));
		
	#Иначе
		
		Для Каждого _ТекущиеДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисВызовСервера.Соответствие_Удалить(_ТекущиеДанные, "СправочникСсылка.НоменклатурныеГруппы");
		КонецЦикла;
		
	#КонецЕсли
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.ФормаКомандаОтбор.Пометка = НЕ Элементы.ФормаКомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаКомандаОтбор.Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязьВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		ВетисВызовСервера.Соответствие_ДобавитьProductItem(пРезультат, пПараметры.enterpriseguid, пПараметры.guid, пПараметры.name);
		
		ОбновитьСписок();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Выполнить(Элемент.Имя+"Использование=ЗначениеЗаполнено("+Элемент.Имя+");");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипПродукцииПриИзменении(Элемент)
	
	ЗаполнитьСписокПродукцииСервер();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элементы.СправочникСписок.ТекущаяСтрока = ВетисВызовСервера.Соответствие_ПолучитьСсылку(Элементы.СписокВетис.ТекущиеДанные.guid, "Справочник.НоменклатурныеГруппы");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок()
	
	#Если НЕ МобильноеПриложениеКлиент Тогда
	Элементы.СправочникСписок.Обновить();
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьСписокПродукцииСервер()
	
	Перем _Product, _параметры;
	
	Элементы.ОтборПродукция.СписокВыбора.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ОтборТипПродукции) Тогда
		Возврат;
	КонецЕсли;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисProductService = ?(_Версия20, ВетисProductService_2_0, ВетисProductService);
	_ВетисArgusProductionСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисArgusProductionСлой1с);
	
	_productType = _ВетисArgusProductionСлой1с.ProductType(ОтборТипПродукции);
	
	Пока _ВетисProductService.GetProductByTypeListСледующий(_productType, _Product, _параметры) Цикл
		
		Элементы.ОтборПродукция.СписокВыбора.Добавить(_product.guid, _product.name);
		
	КонецЦикла;
	
	Элементы.ОтборПродукция.СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовПродукцииСервер()
	
КонецПроцедуры

&НаСервере
Процедура КомандаНайтиСервер()
	
	Перем _Product, _subProduct, _параметрыP;
	
	_Версия20 = Ветис.Версия_2_0();
	_ВетисProductService = ?(_Версия20, ВетисProductService_2_0, ВетисProductService);
	_ВетисArgusProductionСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисArgusProductionСлой1с);
	
	_ТипПродукции = _ВетисArgusProductionСлой1с.ProductType(ОтборТипПродукции);
	
	СписокВетис.Очистить();
	
	Если ОтборПродукцияИспользование Тогда
		_параметрыS = Неопределено;
		Пока _ВетисProductService.GetSubProductByProductListСледующий(ОтборПродукция, _subProduct, _параметрыS) Цикл
			
			_СписокВетисСтрока = СписокВетис.Добавить();
			_СписокВетисСтрока.name = _subProduct.name;
			_СписокВетисСтрока.guid = _subProduct.guid;
			_СписокВетисСтрока.link = НЕ Ветис.Соответствие_ПолучитьСсылку(_subProduct.guid, ВетисИмяСправочника.SubProduct("Справочник"), Ложь) = Ложь;
			
		КонецЦикла;
	Иначе
		Пока _ВетисProductService.GetProductByTypeListСледующий(_ТипПродукции, _Product, _параметрыP) Цикл
			
			_параметрыS = Неопределено;
			Пока _ВетисProductService.GetSubProductByProductListСледующий(_Product.guid, _subProduct, _параметрыS) Цикл
				
				_СписокВетисСтрока = СписокВетис.Добавить();
				_СписокВетисСтрока.name = _subProduct.name;
				_СписокВетисСтрока.guid = _subProduct.guid;
				_СписокВетисСтрока.link = НЕ Ветис.Соответствие_ПолучитьСсылку(_subProduct.guid, ВетисИмяСправочника.SubProduct("Справочник"), Ложь) = Ложь;
				
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
	СписокВетис.Сортировать("name");
	
КонецПроцедуры
